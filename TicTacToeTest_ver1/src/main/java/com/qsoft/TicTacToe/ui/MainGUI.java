package com.qsoft.TicTacToe.ui;

import com.jgoodies.forms.layout.CellConstraints;
import com.jgoodies.forms.layout.FormLayout;
import com.qsoft.TicTacToe.persistance.entity.GameEntity;
import org.springframework.stereotype.Component;

import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import java.awt.*;
import java.awt.event.ActionListener;
import java.util.*;
import java.util.List;

/**
 * User: quynhtq
 * Date: 8/9/13
 * Time: 9:04 AM
 */
@Component
public class MainGUI extends JFrame
{
    private JPanel panel1;
    private JButton startButton;
    private JButton stopButton;
    private JPanel matcherPanel;
    private JButton button2;
    private JButton button5;
    private JButton button8;
    private JButton button3;
    private JButton button6;
    private JButton button1;
    private JButton button4;
    private JButton button7;
    private JButton button9;
    private JLabel lbGameStatus;
    private JLabel lbGameResult;
    private JButton btShowHistory;
    private JTable historyTable;
    private JScrollPane scrollPane1;
    private ArrayList<JButton> listButton = new ArrayList<JButton>();
    public static final String MAIN_WINDOW_NAME = "TicTacToeMain";
    public static String STATUS_GAME_STARTED = "Game Started";
    public static String STATUS_GAME_STOPPED = "Game Stopped";
    public static String labelName = "gameStatus";
    public static String lbResult = "gameResult";
    public static String THE_WINNER_IS = "The winner is ";
    public static String NO_WINNER = "No one wins";
    private DefaultTableModel tableModel;

    public void showMainView()
    {
        $$$setupUI$$$();
        setSize(new Dimension(500, 500));
        setName(MAIN_WINDOW_NAME);
        setTitle(MAIN_WINDOW_NAME);
        setContentPane(panel1);
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setVisible(true);
        //this.controller = controller;
        listButton.add(button1);
        listButton.add(button2);
        listButton.add(button3);
        listButton.add(button4);
        listButton.add(button5);
        listButton.add(button6);
        listButton.add(button7);
        listButton.add(button8);
        listButton.add(button9);
    }

    //    public MainGUI()
//    {
//    }
    public void addActionListener(ActionListener controller)
    {
        startButton.addActionListener(controller);
        stopButton.addActionListener(controller);
        btShowHistory.addActionListener(controller);
        for (JButton jButton : listButton)
        {
            jButton.addActionListener(controller);
        }

    }

    //getter and setter
    public JButton getStartButton()
    {
        return startButton;
    }

    public JLabel getLbGameResult()
    {
        return lbGameResult;
    }

    public JButton getStopButton()
    {
        return stopButton;
    }

    public ArrayList<JButton> getListButton()
    {
        return listButton;
    }

    public void setLbGameStatus(String status)
    {
        lbGameStatus.setText(status);
    }

    public JButton getBtShowHistory()
    {
        return btShowHistory;
    }

    //other methods
    public void createHistoryTable(List<GameEntity> listGameFinished)
    {
        tableModel = (DefaultTableModel) historyTable.getModel();
        tableModel.addColumn("Id");
        tableModel.addColumn("Winner");
        tableModel.addColumn("Process");
        for (GameEntity gameEntity : listGameFinished)
        {
            tableModel.addRow(new Object[]{gameEntity.getId(), gameEntity.getWinner(), gameEntity.getProcess()});
        }
        //historyTable = null;
//        String[] colums = new String[]{"Id", "Winner", "Process"};
//        String[][] result = new String[listGameFinished.size() + 1][4];
//        for (int i = 0; i < listGameFinished.size(); i++)
//        {
//            result[i][0] = listGameFinished.get(i).getId().toString();
//            result[i][1] = listGameFinished.get(i).getWinner();
//            result[i][2] = listGameFinished.get(i).getProcess();
//        }
        //historyTable = new JTable(new Object[][]{}, colums);
        //historyTable.setVisible(true);
    }


    private void createUIComponents()
    {
        historyTable = new JTable();
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$()
    {
        createUIComponents();
        panel1 = new JPanel();
        panel1.setLayout(new FormLayout("fill:d:grow", "center:max(d;4px):noGrow,top:4dlu:noGrow,center:max(d;4px):noGrow,top:4dlu:noGrow,center:d:noGrow,top:4dlu:noGrow,center:max(d;4px):noGrow"));
        lbGameStatus = new JLabel();
        lbGameStatus.setName("gameStatus");
        lbGameStatus.setText("");
        CellConstraints cc = new CellConstraints();
        panel1.add(lbGameStatus, cc.xy(1, 1));
        final JPanel panel2 = new JPanel();
        panel2.setLayout(new FormLayout("", ""));
        panel1.add(panel2, cc.xy(1, 5));
        matcherPanel = new JPanel();
        matcherPanel.setLayout(new GridBagLayout());
        panel1.add(matcherPanel, cc.xy(1, 3));
        button2 = new JButton();
        button2.setName("1-2");
        button2.setText(" ");
        GridBagConstraints gbc;
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 0;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        matcherPanel.add(button2, gbc);
        button5 = new JButton();
        button5.setName("2-2");
        button5.setText(" ");
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 1;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        matcherPanel.add(button5, gbc);
        button8 = new JButton();
        button8.setName("3-2");
        button8.setText(" ");
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 2;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        matcherPanel.add(button8, gbc);
        button3 = new JButton();
        button3.setName("1-3");
        button3.setText(" ");
        gbc = new GridBagConstraints();
        gbc.gridx = 2;
        gbc.gridy = 0;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        matcherPanel.add(button3, gbc);
        button6 = new JButton();
        button6.setName("2-3");
        button6.setText(" ");
        gbc = new GridBagConstraints();
        gbc.gridx = 2;
        gbc.gridy = 1;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        matcherPanel.add(button6, gbc);
        button1 = new JButton();
        button1.setActionCommand(".");
        button1.setName("1-1");
        button1.setText(" ");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 0;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        matcherPanel.add(button1, gbc);
        button4 = new JButton();
        button4.setName("2-1");
        button4.setText(" ");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 1;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        matcherPanel.add(button4, gbc);
        button7 = new JButton();
        button7.setName("3-1");
        button7.setText(" ");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 2;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        matcherPanel.add(button7, gbc);
        button9 = new JButton();
        button9.setName("3-3");
        button9.setText(" ");
        gbc = new GridBagConstraints();
        gbc.gridx = 2;
        gbc.gridy = 2;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        matcherPanel.add(button9, gbc);
        lbGameResult = new JLabel();
        lbGameResult.setName("gameResult");
        lbGameResult.setText("");
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 3;
        gbc.anchor = GridBagConstraints.WEST;
        matcherPanel.add(lbGameResult, gbc);
        startButton = new JButton();
        startButton.setName("btnStart");
        startButton.setText("Start");
        gbc = new GridBagConstraints();
        gbc.gridx = 5;
        gbc.gridy = 0;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        matcherPanel.add(startButton, gbc);
        stopButton = new JButton();
        stopButton.setName("btnStop");
        stopButton.setText("Stop");
        gbc = new GridBagConstraints();
        gbc.gridx = 5;
        gbc.gridy = 1;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        matcherPanel.add(stopButton, gbc);
        final JPanel spacer1 = new JPanel();
        gbc = new GridBagConstraints();
        gbc.gridx = 3;
        gbc.gridy = 0;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        matcherPanel.add(spacer1, gbc);
        final JPanel spacer2 = new JPanel();
        gbc = new GridBagConstraints();
        gbc.gridx = 4;
        gbc.gridy = 1;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        matcherPanel.add(spacer2, gbc);
        btShowHistory = new JButton();
        btShowHistory.setName("btShowHistory");
        btShowHistory.setText("History");
        gbc = new GridBagConstraints();
        gbc.gridx = 5;
        gbc.gridy = 2;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        matcherPanel.add(btShowHistory, gbc);
        final JPanel panel3 = new JPanel();
        panel3.setLayout(new BorderLayout(0, 0));
        panel1.add(panel3, cc.xy(1, 7));
        scrollPane1 = new JScrollPane();
        scrollPane1.setVisible(true);
        panel3.add(scrollPane1, BorderLayout.CENTER);
        historyTable.setName("historyTable");
        historyTable.setVisible(true);
        scrollPane1.setViewportView(historyTable);
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$()
    {
        return panel1;
    }
}
